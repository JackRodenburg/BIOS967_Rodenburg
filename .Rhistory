color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Nat (Scaled)",
labels = percent_format(scale = max_count)) +
scale_y_continuous("Non (Original)",
sec.axis = sec_axis(~ . * max_count, name = "Non (Scaled)")) +
labs(x = "Year", y = "Total Count", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Nat (Scaled)",
labels = percent_format(scale = max_count)) +
scale_y_continuous("Non (Original)",
sec.axis = sec_axis(~ . * max_count, name = "Non (Scaled)")) +
labs(x = "Year", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Nat (Scaled)",
labels = percent_format(scale = max_count)) +
scale_y_continuous("Non (Original)",
sec.axis = sec_axis(~ . * max_count, name = "Non (Scaled)")) +
labs(x = "Year", y = "Total Count", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Nat (Scaled)",
labels = percent_format(scale = max_count)) +
scale_y_continuous("Non (Original)",
sec.axis = sec_axis(~ . * max_count, name = "Non (Scaled)"), labels = NULL) +
labs(x = "Year", y = "Total Count", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Nat (Scaled)",
labels = percent_format(scale = max_count)) +
scale_y_continuous("Non (Original)",
sec.axis = sec_axis(~ . * max_count, name = "Non (Scaled)", labels = NULL) +
labs(x = "Year", y = "Total Count", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Nat (Scaled)",
labels = percent_format(scale = max_count)) +
scale_y_continuous("Non (Original)",
sec.axis = sec_axis(~ . * max_count, name = "Non (Scaled)", labels = NULL)) +
labs(x = "Year", y = "Total Count", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Native population (scaled)",
labels = percent_format(scale = max_count)) +
scale_y_continuous("Non-native population (scaled)",
sec.axis = sec_axis(~ . * max_count, name = "Non (Scaled)", labels = NULL)) +
labs(x = "Year", y = "Total Count", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
labs(x = "Year", y = "Total Count", title = "Fish Counts Over Time by Origin") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
labs(x = "Year", y = "Total Count (Scaled)", title = "A Comparison of Native and Nonnative Response to Drought") +
theme_minimal()
# Print the plot
print(plot)
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
geom_line() +
scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
theme_minimal()
print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
labs(x = "Year", y = "Total Count (Scaled)", title = "Native and Nonnative Fish Population") +
theme_minimal()
# Print the plot
print(plot)
unique(platte_fish_extended$Segment)
source("~/Documents/GitHub/R_Project_2023/BIOS967_Rodenburg/scripts/Initial_Analysis.R", echo=TRUE)
source("~/Documents/GitHub/R_Project_2023/BIOS967_Rodenburg/scripts/Initial_Analysis.R", echo=TRUE)
source("~/Documents/GitHub/R_Project_2023/BIOS967_Rodenburg/scripts/Initial_Analysis.R", echo=TRUE)
create_segment_plot <- function(segment_data, title) {
# Calculate max counts for scaling
max_count_native <- max(segment_data[segment_data$Origin == "Nat",]$TotalCount, na.rm = TRUE)
max_count_nonnative <- max(segment_data[segment_data$Origin == "Non",]$TotalCount, na.rm = TRUE)
# Create the plot
plot <- ggplot() +
geom_line(data = segment_data[segment_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = segment_data[segment_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Count (Scaled)",
labels = percent_format()) +
labs(x = "Year", y = "Total Count", title = title) +
theme_minimal()
return(plot)
}
create_segment_plot <- function(segment_data, title) {
# Calculate max counts for scaling
max_count_native <- max(segment_data[segment_data$Origin == "Nat",]$TotalCount, na.rm = TRUE)
max_count_nonnative <- max(segment_data[segment_data$Origin == "Non",]$TotalCount, na.rm = TRUE)
# Create the plot
plot <- ggplot() +
geom_line(data = segment_data[segment_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = segment_data[segment_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Count (Scaled)",
labels = percent_format()) +
labs(x = "Year", y = "Total Count", title = title) +
theme_minimal()
return(plot)
}
# Aggregating data by year and origin for each segment
summarize_segment_data <- function(segment_data) {
segment_data %>%
group_by(Year, Origin) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE)) %>%
ungroup()
}
create_segment_plot <- function(segment_data, title) {
# Calculate max counts for scaling
max_count_native <- max(segment_data[segment_data$Origin == "Nat",]$TotalCount, na.rm = TRUE)
max_count_nonnative <- max(segment_data[segment_data$Origin == "Non",]$TotalCount, na.rm = TRUE)
# Create the plot
plot <- ggplot() +
geom_line(data = segment_data[segment_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = segment_data[segment_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Count (Scaled)",
labels = percent_format()) +
labs(x = "Year", y = "Total Count", title = title) +
theme_minimal()
return(plot)
}
# Aggregating data by year and origin for each segment
summarize_segment_data <- function(segment_data) {
segment_data %>%
group_by(Year, Origin) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE)) %>%
ungroup()
}
LLP_fish_summary <- summarize_segment_data(LLP_fish)
CP_fish_summary <- summarize_segment_data(CP_fish)
ULP_fish_summary <- summarize_segment_data(ULP_fish)
ELK_fish_summary <- summarize_segment_data(ELK_fish)
PMC_fish_summary <- summarize_segment_data(PMC_fish)
create_segment_plot <- function(segment_data, title) {
# Calculate max counts for scaling
max_count_native <- max(segment_data[segment_data$Origin == "Nat",]$TotalCount, na.rm = TRUE)
max_count_nonnative <- max(segment_data[segment_data$Origin == "Non",]$TotalCount, na.rm = TRUE)
# Create the plot
plot <- ggplot() +
geom_line(data = segment_data[segment_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = segment_data[segment_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Count (Scaled)",
labels = percent_format()) +
labs(x = "Year", y = "Total Count", title = title) +
theme_minimal()
return(plot)
}
# Aggregating data by year and origin for each segment
summarize_segment_data <- function(segment_data) {
segment_data %>%
group_by(Year, Origin) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE)) %>%
ungroup()
}
LLP_fish_summary <- summarize_segment_data(LLP_fish)
CP_fish_summary <- summarize_segment_data(CP_fish)
ULP_fish_summary <- summarize_segment_data(ULP_fish)
ELK_fish_summary <- summarize_segment_data(ELK_fish)
PMC_fish_summary <- summarize_segment_data(PMC_fish)
# Create plots for each segment
LLP_plot <- create_segment_plot(LLP_fish_summary, "LLP Fish Counts Over Time by Origin")
CP_plot <- create_segment_plot(CP_fish_summary, "CP Fish Counts Over Time by Origin")
ULP_plot <- create_segment_plot(ULP_fish_summary, "ULP Fish Counts Over Time by Origin")
ELK_plot <- create_segment_plot(ELK_fish_summary, "ELK Fish Counts Over Time by Origin")
PMC_plot <- create_segment_plot(PMC_fish_summary, "PMC Fish Counts Over Time by Origin")
# Print the plots (or save them as needed)
print(LLP_plot)
print(CP_plot)
print(ULP_plot)
print(ELK_plot)
print(PMC_plot)
create_segment_plot <- function(segment_data, title) {
# Calculate max counts for scaling
max_count_native <- max(segment_data[segment_data$Origin == "Nat",]$TotalCount, na.rm = TRUE)
max_count_nonnative <- max(segment_data[segment_data$Origin == "Non",]$TotalCount, na.rm = TRUE)
# Create the plot
plot <- ggplot() +
geom_line(data = segment_data[segment_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
geom_line(data = segment_data[segment_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
scale_y_continuous("Count (Scaled)",
labels = percent_format()) +
labs(x = "Year", y = "Total Count", title = title) +
theme_minimal()
return(plot)
}
# Aggregating data by year and origin for each segment
summarize_segment_data <- function(segment_data) {
segment_data %>%
group_by(Year, Origin) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE)) %>%
ungroup()
}
LLP_fish_summary <- summarize_segment_data(LLP_fish)
CP_fish_summary <- summarize_segment_data(CP_fish)
ULP_fish_summary <- summarize_segment_data(ULP_fish)
ELK_fish_summary <- summarize_segment_data(ELK_fish)
PMC_fish_summary <- summarize_segment_data(PMC_fish)
# Create plots for each segment
LLP_plot <- create_segment_plot(LLP_fish_summary, "LLP Fish Counts Over Time by Origin")
CP_plot <- create_segment_plot(CP_fish_summary, "CP Fish Counts Over Time by Origin")
ULP_plot <- create_segment_plot(ULP_fish_summary, "ULP Fish Counts Over Time by Origin")
ELK_plot <- create_segment_plot(ELK_fish_summary, "ELK Fish Counts Over Time by Origin")
PMC_plot <- create_segment_plot(PMC_fish_summary, "PMC Fish Counts Over Time by Origin")
# Print the plots (or save them as needed)
print(LLP_plot)
print(CP_plot)
print(ULP_plot)
#print(ELK_plot)
#print(PMC_plot)
