# Plot the catfish count over time
ggplot(bullhead_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "yellow") +  # Add lines connecting the points
#geom_point() +  # Add points
scale_x_continuous(breaks = unique(bullhead_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Bullhead Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
shorthorse_data_avg <- platte_fish_cleaned %>%
filter(Species %in% c(262))
shorthorse_data_avg <- shorthorse_data_avg %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
shorthorse_count_yearly <- shorthorse_data_avg %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(shorthorse_count_yearly, aes(x = Year, y = Total_Count)) +
geom_line() +  # Add lines connecting the points
#geom_point(color = "blue") +  # Add points
scale_x_continuous(breaks = unique(shorthorse_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Shorthead Redhorse Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
sucker_data_avg <- platte_fish_cleaned %>%
filter(Species %in% c(210, 212, 214, 224, 230))
sucker_data_avg <- sucker_data_avg %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
sucker_count_yearly <- sucker_data_avg %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(sucker_count_yearly, aes(x = Year, y = Total_Count)) +
geom_line(color = "purple") +  # Add lines connecting the points
#geom_point(color = "purple") +  # Add points
scale_x_continuous(breaks = unique(sucker_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Sucker Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
# Summarize native fish data by year
native_fish_yearly <- native_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Summarize non-native fish data by year
nonnative_fish_yearly <- nonnative_fish %>%
group_by(Year) %>%
summarise(TotalCount = sum(Count, na.rm = TRUE))
# Combine the datasets
combined_fish_data <- bind_rows(
mutate(native_fish_yearly, Origin = "Nat"),
mutate(nonnative_fish_yearly, Origin = "Non")
)
# Plotting
#native_v_nonnative_plot <- ggplot(combined_fish_data, aes(x = Year, y = TotalCount, color = Origin, group = Origin)) +
#geom_line() +
#scale_color_manual(values = c("Nat" = "blue", "Non" = "red")) +
#labs(x = "Year", y = "Total Count", color = "Origin", title = "Fish Counts Over Time by Origin") +
#theme_minimal()
#print(native_v_nonnative_plot)
# Find the maximum count for scaling
max_count_native <- max(native_fish_yearly$TotalCount)
max_count_nonnative <- max(nonnative_fish_yearly$TotalCount)
# Create the plot
plot <- ggplot() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Nat", ],
aes(x = Year, y = TotalCount/max_count_native, group = Origin),
color = "blue") +
scale_x_continuous(breaks = unique(native_fish_yearly$Year)) +  # Specify x-axis breaks to be each year
geom_point() +
geom_line(data = combined_fish_data[combined_fish_data$Origin == "Non", ],
aes(x = Year, y = TotalCount/max_count_nonnative, group = Origin),
color = "red") +
geom_point() +
scale_x_continuous(breaks = unique(nonnative_fish_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(x = "Year", y = "Total Count (Scaled)", title = "Native and Nonnative Fish Population (Scaled)") +
theme_minimal()
# Print the plot
print(plot)
# Add a 'Group' column to each dataset
minnow_count_yearly$Group <- 'Minnow'
shiner_count_yearly$Group <- 'Shiner'
sturgeon_count_yearly$Group <- 'Sturgeon'
sucker_count_yearly$Group <- 'Sucker'
gar_count_yearly$Group <- 'Gar'
catfish_count_yearly$Group <- 'Catfish'
# Combine the datasets
combined_data <- rbind(gar_count_yearly, minnow_count_yearly, shiner_count_yearly, catfish_count_yearly, sturgeon_count_yearly, sucker_count_yearly)
ggsave("temp_flow_plot.png", temp_flow_plot, width = 8, height = 6)
# Count the total number of nonnative fish
total_nonnative_fish <- sum(nonnative_fish$Count)
total_native_fish <- sum(native_fish$Count)
total_fish <- sum(platte_fish_cleaned$Count)
# Filter the rows where species is 178
species_178_data <- nonnative_fish[nonnative_fish$Species == 178, ]
# Sum the "Count" column of this filtered dataset
fish_178_count <- sum(species_178_data$Count)
# Print the result
print(paste("Total count of species 178:", fish_178_count))
# Calculate the percentage
percentage_178 <- (fish_178_count / total_fish) * 100
# Print the result
print(paste("Percentage of Common Carp:", percentage_178, "%"))
# Filter the rows where species is 178
channel_cat_data <- native_fish[native_fish$Species == 360, ]
# Sum the "Count" column of this filtered dataset
channel_cat_count <- sum(channel_cat_data$Count)
# Print the result
print(paste("Total count of channel catfish:", channel_cat_count))
# Calculate the percentage
percentage_channel_cat <- (channel_cat_count / total_fish) * 100
# Print the result
print(paste("Percentage of Channel Catfish:", percentage_channel_cat, "%"))
# Filter the rows where species is 178
species_carp_data <- nonnative_fish[nonnative_fish$Species %in% c(176,178,180,181,182), ]
# Sum the "Count" column of this filtered dataset
species_carp_count <- sum(species_carp_data$Count)
# Print the result
print(paste("Total count of carps:", species_carp_count))
# Calculate the percentage
carp_percentage <- (species_carp_count / total_fish) * 100
# Print the result
print(paste("Percentage of Carp:", carp_percentage, "%"))
# Filter the rows where species is 178
species_catfish_data <- native_fish[native_fish$Species %in% c(300,350,355,360,365,370), ]
# Sum the "Count" column of this filtered dataset
species_catfish_count <- sum(species_catfish_data$Count)
# Print the result
print(paste("Total count of catfish:", species_catfish_count))
# Calculate the percentage
catfish_percentage <- (species_catfish_count / total_fish) * 100
# Print the result
print(paste("Percentage of catfish:", catfish_percentage, "%"))
# Filter the rows where species is 178
species_sturgeon_data <- native_fish[native_fish$Species %in% c(26,28), ]
# Sum the "Count" column of this filtered dataset
species_sturgeon_count <- sum(species_sturgeon_data$Count)
# Print the result
print(paste("Total count of sturgeon:", species_sturgeon_count))
# Calculate the percentage
sturgeon_percentage <- (species_sturgeon_count / total_fish) * 100
# Print the result
print(paste("Percentage of sturgeon:", sturgeon_percentage, "%"))
# List of electrofishing gear types
electrofishing_gear <- c("EF", "BPEF", "EFH", "EFL", "FAC")
# Filter the rows where gear is one of the electrofishing types
electrofishing_data <- platte_fish_cleaned[platte_fish_cleaned$Gear %in% electrofishing_gear, ]
# Sum the "Count" column of this filtered dataset
electrofishing_count <- sum(electrofishing_data$Count)
# Calculate the percentage
percentage_electrofishing <- (electrofishing_count / total_fish) * 100
# Print the result
print(paste("Percentage of fish collected using electrofishing methods:", round(percentage_electrofishing, 2), "%"))
species_names <- data.frame(SpeciesID = c(360, 120, 144, 178, 370, 212, 132, 862, 262, 44))
SpeciesName = c("Channel Catfish", "Red Shiner", "Sand Shiner", "Common Carp", "Flathead Catfish", "River Carpsucker", "River Shiner, Freshwater drum, Shorthead Redhorse", "Shortnose Gar")
# Merge the species names with species_df
species_df <- merge(species_df, species_names, by = "SpeciesID", all.x = TRUE)
site_number <- c("06805500")
parameterCd <- c("00010", "00065", "00060", "00045") # Temperature and Gage Height
data <- readNWISdv(site_number, parameterCd, startDate, endDate)
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
minnow_data_avg <- platte_fish_cleaned %>%
filter(Species %in% c(100, 142, 150, 152, 154, 156, 158, 160, 162))
minnow_data_avg <- minnow_data_avg %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
minnow_count_yearly <- minnow_data_avg %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(minnow_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "brown") +  # Add lines connecting the points
#geom_point(color = "blue") +  # Add points
scale_x_continuous(breaks = unique(minnow_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Minnow Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
# Count the total number of nonnative fish
total_nonnative_fish <- sum(nonnative_fish$Count)
total_native_fish <- sum(native_fish$Count)
total_fish <- sum(platte_fish_cleaned$Count)
# Filter the rows where species is 178
species_178_data <- nonnative_fish[nonnative_fish$Species == 178, ]
# Sum the "Count" column of this filtered dataset
fish_178_count <- sum(species_178_data$Count)
# Print the result
print(paste("Total count of species 178:", fish_178_count))
# Calculate the percentage
percentage_178 <- (fish_178_count / total_fish) * 100
# Print the result
print(paste("Percentage of Common Carp:", percentage_178, "%"))
# Filter the rows where species is 178
channel_cat_data <- native_fish[native_fish$Species == 360, ]
# Sum the "Count" column of this filtered dataset
channel_cat_count <- sum(channel_cat_data$Count)
# Print the result
print(paste("Total count of channel catfish:", channel_cat_count))
# Calculate the percentage
percentage_channel_cat <- (channel_cat_count / total_fish) * 100
# Print the result
print(paste("Percentage of Channel Catfish:", percentage_channel_cat, "%"))
# Filter the rows where species is 178
species_carp_data <- nonnative_fish[nonnative_fish$Species %in% c(176,178,180,181,182), ]
# Sum the "Count" column of this filtered dataset
species_carp_count <- sum(species_carp_data$Count)
# Print the result
print(paste("Total count of carps:", species_carp_count))
# Calculate the percentage
carp_percentage <- (species_carp_count / total_fish) * 100
# Print the result
print(paste("Percentage of Carp:", carp_percentage, "%"))
# Filter the rows where species is 178
species_catfish_data <- native_fish[native_fish$Species %in% c(300,350,355,360,365,370), ]
# Sum the "Count" column of this filtered dataset
species_catfish_count <- sum(species_catfish_data$Count)
# Print the result
print(paste("Total count of catfish:", species_catfish_count))
# Calculate the percentage
catfish_percentage <- (species_catfish_count / total_fish) * 100
# Print the result
print(paste("Percentage of catfish:", catfish_percentage, "%"))
# Filter the rows where species is 178
species_sturgeon_data <- native_fish[native_fish$Species %in% c(26,28), ]
# Sum the "Count" column of this filtered dataset
species_sturgeon_count <- sum(species_sturgeon_data$Count)
# Print the result
print(paste("Total count of sturgeon:", species_sturgeon_count))
# Calculate the percentage
sturgeon_percentage <- (species_sturgeon_count / total_fish) * 100
# Print the result
print(paste("Percentage of sturgeon:", sturgeon_percentage, "%"))
# List of electrofishing gear types
electrofishing_gear <- c("EF", "BPEF", "EFH", "EFL", "FAC")
# Filter the rows where gear is one of the electrofishing types
electrofishing_data <- platte_fish_cleaned[platte_fish_cleaned$Gear %in% electrofishing_gear, ]
# Sum the "Count" column of this filtered dataset
electrofishing_count <- sum(electrofishing_data$Count)
# Calculate the percentage
percentage_electrofishing <- (electrofishing_count / total_fish) * 100
# Print the result
print(paste("Percentage of fish collected using electrofishing methods:", round(percentage_electrofishing, 2), "%"))
species_names <- data.frame(SpeciesID = c(360, 120, 144, 178, 370, 212, 132, 862, 262, 44))
SpeciesName = c("Channel Catfish", "Red Shiner", "Sand Shiner", "Common Carp", "Flathead Catfish", "River Carpsucker", "River Shiner, Freshwater drum, Shorthead Redhorse", "Shortnose Gar")
# Merge the species names with species_df
species_df <- merge(species_df, species_names, by = "SpeciesID", all.x = TRUE)
species_names
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,178,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,178,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year, Species) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,178,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,178,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
# Assuming 'Species' column has species identifiers and 'Year' column has year information
carp_count_yearly_species <- carp_data %>%
group_by(Year, Species) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count, color = as.factor(Species))) +
geom_smooth() +  # Add smooth lines for each species
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time by Species",
x = "Year",
y = "Total Count",
color = "Species") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,178,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
# Assuming 'Species' column has species identifiers and 'Year' column has year information
carp_count_yearly_species <- carp_data %>%
group_by(Year, Species) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
ggplot(carp_count_yearly_species, aes(x = Year, y = Total_Count, color = as.factor(Species))) +
geom_smooth() +  # Add smooth lines for each species
scale_x_continuous(breaks = unique(carp_count_yearly_species$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time by Species",
x = "Year",
y = "Total Count",
color = "Species") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
# Assuming 'Species' column has species identifiers and 'Year' column has year information
carp_count_yearly_species <- carp_data %>%
group_by(Year, Species) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
ggplot(carp_count_yearly_species, aes(x = Year, y = Total_Count, color = as.factor(Species))) +
geom_smooth() +  # Add smooth lines for each species
scale_x_continuous(breaks = unique(carp_count_yearly_species$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time by Species",
x = "Year",
y = "Total Count",
color = "Species") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
# Assuming 'Species' column has species identifiers and 'Year' column has year information
carp_count_yearly_species <- carp_data %>%
group_by(Year, Species) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
ggplot(carp_count_yearly_species, aes(x = Year, y = Total_Count, color = as.factor(Species))) +
geom_line() +  # Add smooth lines for each species
scale_x_continuous(breaks = unique(carp_count_yearly_species$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time by Species",
x = "Year",
y = "Total Count",
color = "Species") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
platte_fish_cleaned <- platte_fish_cleaned %>%
mutate(Count = as.numeric(as.character(Count)))
#isolates just the carp
carp_data <- platte_fish_cleaned %>%
filter(Species %in% c(176,178,180,181,182))
carp_data <- carp_data %>%
filter(!is.na(Count))
# Summarize the data to get the total count per year (or per month if needed)
carp_count_yearly <- carp_data %>%
group_by(Year) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
# Plot the catfish count over time
ggplot(carp_count_yearly, aes(x = Year, y = Total_Count)) +
geom_smooth(color = "red") +  # Add lines connecting the points
#geom_point(color = "black") +  # Add points
scale_x_continuous(breaks = unique(carp_count_yearly$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time",
x = "Year",
y = "Total Count") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
# Assuming 'Species' column has species identifiers and 'Year' column has year information
carp_count_yearly_species <- carp_data %>%
group_by(Year, Species) %>%
summarize(Total_Count = sum(Count, na.rm = TRUE)) %>%
ungroup()
ggplot(carp_count_yearly_species, aes(x = Year, y = Total_Count, color = as.factor(Species))) +
geom_line() +  # Add smooth lines for each species
scale_x_continuous(breaks = unique(carp_count_yearly_species$Year)) +  # Specify x-axis breaks to be each year
labs(title = "Carp Population Over Time by Species",
x = "Year",
y = "Total Count",
color = "Species") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
citation("vegan")
